{
  "hints": {
    "createApplication(application,uint64,uint64)void": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "optInToApplication()void": {
      "call_config": {
        "opt_in": "CALL"
      }
    },
    "flipCoin(pay,uint64)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "settle(application)(uint64,uint64)": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {
        "commitmentRound": {
          "type": "uint64",
          "key": "commitmentRound"
        },
        "bet": {
          "type": "uint64",
          "key": "bet"
        },
        "betOutcome": {
          "type": "uint64",
          "key": "betOutcome"
        }
      },
      "reserved": {}
    },
    "global": {
      "declared": {
        "beaconApp": {
          "type": "uint64",
          "key": "beaconApp"
        },
        "minBet": {
          "type": "uint64",
          "key": "minBet"
        },
        "maxBet": {
          "type": "uint64",
          "key": "maxBet"
        },
        "betsOutstanding": {
          "type": "uint64",
          "key": "betsOutstanding"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 0,
      "num_uints": 4
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 3
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDk="
  },
  "contract": {
    "name": "CoinFlip",
    "desc": "",
    "methods": [
      {
        "name": "createApplication",
        "args": [
          {
            "name": "beaconApp",
            "type": "application",
            "desc": ""
          },
          {
            "name": "minBet",
            "type": "uint64",
            "desc": ""
          },
          {
            "name": "maxBet",
            "type": "uint64",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "optInToApplication",
        "args": [],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "flipCoin",
        "args": [
          {
            "name": "bet",
            "type": "pay",
            "desc": ""
          },
          {
            "name": "outcome",
            "type": "uint64",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "uint64",
          "desc": ""
        }
      },
      {
        "name": "settle",
        "args": [
          {
            "name": "beaconApp",
            "type": "application",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "(uint64,uint64)",
          "desc": ""
        }
      }
    ]
  }
}